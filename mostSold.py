import sqlite3
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path
import matplotlib.pyplot as plt
from matplotlib.pyplot import connect, title
# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage
from PIL import Image,ImageTk

OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"C:\Users\Kushal\OneDrive\Desktop\ShopLens\build\assets\mostSold")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)

def mostSoldGraph(canvas,shopname,switch_to_mainmenu):
    canvas.configure(bg="#A5D1E1")
    canvas.place(x = 0, y = 0)
    canvas.create_rectangle(
        0.0,
        0.0,
        1440.0,
        71.0,
        fill="#0F3ADA",
        outline="")

    canvas.create_text(
        608.0,
        10.0,
        anchor="nw",
        text="Sales Graph",
        fill="#FFFFFF",
        font=('Inter', 34,'bold')
    )

    canvas.create_rectangle(
        0.0,
        13.0,
        114.0,
        53.0,
        fill="#0F3ADA",
        outline="")

    homeButton = Button(text="Home", bg="#0F3ADA", fg="#FFFFFF", font=('Inter', 20, 'bold'), borderwidth=0,
                        highlightthickness=0,command=lambda :deleteforMainmenu())
    homeButton.place(x=0, y=13, width=114, height=40)

    image_image_1 = PhotoImage(
        file=relative_to_assets("image_1.png"))
    image_1 = canvas.create_image(
        1404.0,
        35.0,
        image=image_image_1
    )
    canvas.image = image_image_1


    var = [homeButton]
    def deleteforMainmenu():
        for i in var:
            i.destroy()
        switch_to_mainmenu(shopname)

    con = sqlite3.connect(f"{shopname}.db")
    cursor = con.cursor()
    query = "select Item as Product, Sum(Quantity) as TotalQuantity from Sales group by Item"
    cursor.execute(query)
    data = cursor.fetchall()
    if data:
        products = [row[0] for row in data]
        quantities = [row[1] for row in data]
        plt.figure(figsize=(10, 6), num="Sales Graph")
        plt.bar(products, quantities, color='skyblue')
        plt.xlabel('Product', fontsize=12)
        plt.ylabel("Quantity Sold", fontsize=12)
        plt.title("Most Sold Product", fontsize=16)
        plt.xticks(rotation=45, ha='right')
        plt.tight_layout()
        plt.savefig("Sales1.png")
        image2 = Image.open("Sales1.png")
        resizeImage = image2.resize((800,600))
        sales_image = ImageTk.PhotoImage(resizeImage)
        imageSales = canvas.create_image(720, 429.5, image=sales_image)
        canvas.sales_image = sales_image
    else:
        templabel = Label(text="!!!No Sale Data Available!!!")
    con.close()
